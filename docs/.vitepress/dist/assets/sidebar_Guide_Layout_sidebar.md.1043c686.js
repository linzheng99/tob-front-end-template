import{_ as e,o,c as a,d}from"./app.f6ee8b93.js";const m=JSON.parse('{"title":"侧边栏","description":"","frontmatter":{},"headers":[{"level":2,"title":"logo","slug":"logo","link":"#logo","children":[]},{"level":2,"title":"菜单目录","slug":"菜单目录","link":"#菜单目录","children":[]}],"relativePath":"sidebar/Guide/Layout/sidebar.md"}'),r={name:"sidebar/Guide/Layout/sidebar.md"},t=d('<h1 id="侧边栏" tabindex="-1">侧边栏 <a class="header-anchor" href="#侧边栏" aria-hidden="true">#</a></h1><p><code>/src/layouts/default/Sidebar</code></p><h2 id="logo" tabindex="-1">logo <a class="header-anchor" href="#logo" aria-hidden="true">#</a></h2><p><code>/src/layouts/default/Sidebar/components/SiderLogo.vue</code></p><p>根据侧边栏的展开状态展示 logo 或者 logo + name</p><h2 id="菜单目录" tabindex="-1">菜单目录 <a class="header-anchor" href="#菜单目录" aria-hidden="true">#</a></h2><p><code>/src/layouts/default/Sidebar/components/SiderMenu.vue</code></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>菜单的显示与路由相关；路由通过接口动态获取；路由存储在<code>store</code>中</p><p><code>/src/store/modules/permission.ts</code></p></div><p>思考的点在于 <code>数据结构的转换</code></p><p><a href="https://www.naiveui.com/zh-CN/dark/components/menu" target="_blank" rel="noreferrer">Naive UI Menu组件</a></p><p>router的结构和目录组件的结构存在不同，需通过<code>辅助函数转换</code></p><p><code>辅助函数 /src/utils/helper/menuHelper.ts</code></p><p>hook：iconRender <code>/src/hooks/component/useIconRender.ts</code></p>',13),c=[t];function s(i,n,l,p,u,h){return o(),a("div",null,c)}const f=e(r,[["render",s]]);export{m as __pageData,f as default};
